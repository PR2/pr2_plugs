<launch>
  <rosparam command="load" file="$(find pr2_plugs_actions)/config/joint_trajectories.yaml" />

  <!-- detect wall norm action -->
  <include file="$(find stereo_wall_detection)/wall_extractor.launch"/>

  <!-- wall norm action -->
  <node pkg="pr2_plugs_actions" type="detect_wall_norm.py" name="detect_wall_norm" output="screen"/>

  <!-- vision detect outlet action -->
  <include file="$(find pr2_plugs_actions)/launch/detect_outlet.launch"/>
  <!--node pkg="pr2_plugs_actions" type="vision_detect_outlet.py" name="vision_detect_outlet" output="screen"/-->

  <!-- vision detect plug action -->
  <include file="$(find pr2_plugs_actions)/launch/detect_plug.launch"/>
  <!--node pkg="pr2_plugs_actions" type="vision_detect_plug.py" name="vision_detect_plug" output="screen"/-->

  <!-- detect outlet action -->
  <node pkg="pr2_plugs_actions" type="detect_outlet.py" name="detect_outlet" output="screen"/>

  <!-- detect plug action -->
  <node pkg="pr2_plugs_actions" type="detect_plug.py" name="detect_plug" output="screen"/>



  <!-- fetch plug action -->
  <node pkg="pr2_plugs_actions" type="fetch_plug.py" name="fetch_plug" output="screen"/>

  <!-- stow plug action -->
  <node pkg="pr2_plugs_actions" type="stow_plug.py" name="stow_plug" output="screen"/>

  <!-- plugin action -->
  <node pkg="pr2_plugs_actions" type="plugin.py" name="plugin" output="screen"/>

  <!-- wiggle plug action -->
  <node pkg="pr2_plugs_actions" type="wiggle_plug.py" name="wiggle_plug" output="screen"/>


  <!-- tf frames for debugging -->
  <!--node pkg="pr2_plugs_actions" type="tf_publish.py" args="vision_outlet_detection/goal VisionOutletDetectionActionGoal goal.prior outlet_detection_prior" name="tf_outlet_detection_prior" output="screen" /-->
  <!--node pkg="pr2_plugs_actions" type="tf_publish.py" args="vision_outlet_detection/result VisionOutletDetectionActionResult result.outlet_pose outlet_detection_result" name="tf_outlet_detection_result" output="screen" /-->
  <!--node pkg="pr2_plugs_actions" type="tf_publish.py" args="vision_plug_detection/goal VisionPlugDetectionActionGoal goal.prior plug_detection_prior" name="tf_plug_detection_prior" output="screen" /-->        
  <!--node pkg="pr2_plugs_actions" type="tf_publish.py" args="vision_plug_detection/result VisionPlugDetectionActionResult result.plug_pose plug_detection_result" name="tf_plug_detection_result" output="screen" /-->        
  <node pkg="pr2_plugs_actions" type="tf_publish.py" args="r_arm_ik/goal PR2ArmIKActionGoal goal.pose r_arm_ik_goal" name="tf_r_arm_ik_goal" output="screen" />        

</launch>


